{"ast":null,"code":"var _jsxFileName = \"/Users/roni/Desktop/roni_projects/roni_test/my-app2/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\n\n//////Votes calculation\n// interface Code {\n//   [key: string]: string | undefined\n// }\n\n// const Codes: Code = {\n//   \"C\" : \"Conservative Party\",\n//   \"L\" : \"Labour Party\",\n//   \"UKIP\" : \"UKIP\",\n//   \"LD\" : \"Liberal Democrats\",\n//   \"G\" : \"Green Party\",\n//   \"Ind\" : \"Independent\",\n//   \"SNP\" : \"SNP\"\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  ////Votes calculation\n  // let totalVotes:number = 0;\n  // const [htmlOutput, setHtmlOutput] = useState<any>([]);\n\n  // useEffect(() => {\n  //   ParseDataRow();\n  // }, []);\n\n  // const result = \"Cardiff West, 11014, C, 17803, L, 4923, UKIP, 2069, LD|Islington South & Finsbury, 22547, L, 9389, C, 4829, LD, 3375, UKIP, 3371, G, 309, Ind\";\n\n  // const calculateVotes = (vote: number) => {\n  //   return (vote / totalVotes) * 100;\n  // }\n\n  // const ParseDataRow = (): string => {\n  //   const html: Array<any> = [];\n  //   const rows = result.split('|');\n  //   rows.forEach((row)=> {\n  //     const datas = (row as string).split(', ');\n  //     datas.forEach((data) => {\n  //       console.log(typeof data);\n  //       const vote = parseInt(data);\n  //       if (vote) {\n  //         totalVotes += vote;\n  //         html.push(<div className='number'>{data}</div>);\n  //         html.push(<div className='number'>{calculateVotes(vote)}%</div>);\n  //       } else if ((Object).keys(Codes).includes(data)) {\n  //         html.push(<div className='code'>{Codes[data]}</div>);\n  //       } else {\n  //         html.push(<div className='title'>{data}</div>);\n  //       }\n  //     })\n  //   })\n\n  //   setHtmlOutput(html);\n\n  //   return '';\n  // }\n\n  //Split the treasure\n  let total = 0;\n  let peopleMoney = [];\n  const SplitMoney = (treasure, peopleAmount) => {\n    const sortedTreasure = treasure.sort(function (a, b) {\n      return b - a;\n    });\n    total = sortedTreasure.reduce(function (a, b) {\n      return a + b;\n    }, 0);\n    if (total < sortedTreasure[0] * peopleAmount) {\n      console.log(\"Nope\");\n    } else {\n      const personRequiredMoney = total / peopleAmount;\n      for (let person = 0; person < peopleAmount; person++) {\n        let currentNumber = sortedTreasure[0];\n        let numbersAdded = [];\n        if (currentNumber === personRequiredMoney) {\n          numbersAdded.push(currentNumber);\n        } else {\n          numbersAdded.push(currentNumber);\n          let totalAmount = currentNumber;\n          for (let i = 1; i < sortedTreasure.length; i++) {\n            if (personRequiredMoney >= sortedTreasure[i] + totalAmount) {\n              numbersAdded.push(sortedTreasure[i]);\n              totalAmount += sortedTreasure[i];\n            }\n          }\n        }\n        peopleMoney.push(numbersAdded);\n        for (let i = 0; i < numbersAdded.length; i++) {\n          const index = sortedTreasure.indexOf(numbersAdded[i]);\n          if (index > -1) {\n            // only splice array when item is found\n            sortedTreasure.splice(index, 1); // 2nd parameter means remove one item only\n          }\n        }\n      }\n    }\n\n    console.log(peopleMoney);\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: SplitMoney([27, 7, 20], 2)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","total","peopleMoney","SplitMoney","treasure","peopleAmount","sortedTreasure","sort","a","b","reduce","console","log","personRequiredMoney","person","currentNumber","numbersAdded","push","totalAmount","i","length","index","indexOf","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roni/Desktop/roni_projects/roni_test/my-app2/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n//////Votes calculation\n// interface Code {\n//   [key: string]: string | undefined\n// }\n\n// const Codes: Code = {\n//   \"C\" : \"Conservative Party\",\n//   \"L\" : \"Labour Party\",\n//   \"UKIP\" : \"UKIP\",\n//   \"LD\" : \"Liberal Democrats\",\n//   \"G\" : \"Green Party\",\n//   \"Ind\" : \"Independent\",\n//   \"SNP\" : \"SNP\"\n// }\n\nfunction App() {\n\n  ////Votes calculation\n  // let totalVotes:number = 0;\n  // const [htmlOutput, setHtmlOutput] = useState<any>([]);\n\n  // useEffect(() => {\n  //   ParseDataRow();\n  // }, []);\n  \n  // const result = \"Cardiff West, 11014, C, 17803, L, 4923, UKIP, 2069, LD|Islington South & Finsbury, 22547, L, 9389, C, 4829, LD, 3375, UKIP, 3371, G, 309, Ind\";\n\n  // const calculateVotes = (vote: number) => {\n  //   return (vote / totalVotes) * 100;\n  // }\n\n  // const ParseDataRow = (): string => {\n  //   const html: Array<any> = [];\n  //   const rows = result.split('|');\n  //   rows.forEach((row)=> {\n  //     const datas = (row as string).split(', ');\n  //     datas.forEach((data) => {\n  //       console.log(typeof data);\n  //       const vote = parseInt(data);\n  //       if (vote) {\n  //         totalVotes += vote;\n  //         html.push(<div className='number'>{data}</div>);\n  //         html.push(<div className='number'>{calculateVotes(vote)}%</div>);\n  //       } else if ((Object).keys(Codes).includes(data)) {\n  //         html.push(<div className='code'>{Codes[data]}</div>);\n  //       } else {\n  //         html.push(<div className='title'>{data}</div>);\n  //       }\n  //     })\n  //   })\n\n  //   setHtmlOutput(html);\n\n  //   return '';\n  // }\n\n\n  //Split the treasure\n  let total = 0\n  let peopleMoney:any = [];\n\n\n  const SplitMoney = (treasure: Array<number>, peopleAmount: number) => {\n    const sortedTreasure = treasure.sort(function(a, b){return b - a});\n    total = sortedTreasure.reduce(function (a, b) {return a + b;}, 0);\n\n    if(total < sortedTreasure[0] * peopleAmount) {\n      console.log(\"Nope\");\n    } else{\n      const personRequiredMoney = total / peopleAmount;\n\n      for(let person = 0; person< peopleAmount; person++){\n        let currentNumber = sortedTreasure[0];\n        let numbersAdded = [];\n        if (currentNumber === personRequiredMoney) {\n          numbersAdded.push(currentNumber);\n        } else {\n          numbersAdded.push(currentNumber);\n          let totalAmount = currentNumber;\n          for(let i = 1; i < sortedTreasure.length; i++) {\n            if(personRequiredMoney >= sortedTreasure[i] + totalAmount) {\n              numbersAdded.push(sortedTreasure[i]);\n              totalAmount += sortedTreasure[i]\n            }\n          }\n        }\n\n        peopleMoney.push(numbersAdded);\n        for(let i = 0; i < numbersAdded.length; i++) {\n          const index = sortedTreasure.indexOf(numbersAdded[i]);\n          if (index > -1) { // only splice array when item is found\n            sortedTreasure.splice(index, 1); // 2nd parameter means remove one item only\n          }\n        }\n      }\n    }\n\n    console.log(peopleMoney);\n    return ''\n  }\n\n  return (\n    <div className=\"App\">\n      {/* {htmlOutput} */}\n      {SplitMoney([27,7,20], 2)}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}